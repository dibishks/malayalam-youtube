{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction VideoGridComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵlistener(\"click\", function VideoGridComponent_div_1_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const video_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onVideoClick(video_r1));\n    });\n    i0.ɵɵelement(1, \"img\", 3);\n    i0.ɵɵelementStart(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const video_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", video_r1.thumbnailUrl, i0.ɵɵsanitizeUrl)(\"alt\", video_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(video_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Views: \", video_r1.viewCount, \"\");\n  }\n}\nclass VideoGridComponent {\n  constructor() {\n    this.videos = [];\n    this.videoSelect = new EventEmitter();\n  }\n  onVideoClick(video) {\n    this.videoSelect.emit(video);\n  }\n  static {\n    this.ɵfac = function VideoGridComponent_Factory(t) {\n      return new (t || VideoGridComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: VideoGridComponent,\n      selectors: [[\"app-video-grid\"]],\n      inputs: {\n        videos: \"videos\"\n      },\n      outputs: {\n        videoSelect: \"videoSelect\"\n      },\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"video-grid\"], [\"class\", \"video-card\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"video-card\", 3, \"click\"], [3, \"src\", \"alt\"]],\n      template: function VideoGridComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, VideoGridComponent_div_1_Template, 6, 4, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.videos);\n        }\n      },\n      dependencies: [i1.NgForOf],\n      styles: [\".video-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\\n  gap: 1rem;\\n}\\n\\n.video-card[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  background: white;\\n  padding: 0.5rem;\\n  border-radius: 4px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n}\\n\\nimg[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: auto;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  margin: 0.5rem 0;\\n  font-size: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy92aWRlby1ncmlkL3ZpZGVvLWdyaWQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0UsYUFBQTtFQUNBLDREQUFBO0VBQ0EsU0FBQTtBQUFOOztBQUVJO0VBQ0UsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0Esd0NBQUE7QUFDTjs7QUFDSTtFQUNFLFdBQUE7RUFDQSxZQUFBO0FBRU47O0FBQUk7RUFDRSxnQkFBQTtFQUNBLGVBQUE7QUFHTiIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIC52aWRlby1ncmlkIHtcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgyNTBweCwgMWZyKSk7XG4gICAgICBnYXA6IDFyZW07XG4gICAgfVxuICAgIC52aWRlby1jYXJkIHtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgcGFkZGluZzogMC41cmVtO1xuICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwwLDAsMC4xKTtcbiAgICB9XG4gICAgaW1nIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgIH1cbiAgICBoMyB7XG4gICAgICBtYXJnaW46IDAuNXJlbSAwO1xuICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport { VideoGridComponent };","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵlistener","VideoGridComponent_div_1_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","_r3","video_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","onVideoClick","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","thumbnailUrl","ɵɵsanitizeUrl","title","ɵɵtextInterpolate","ɵɵtextInterpolate1","viewCount","VideoGridComponent","constructor","videos","videoSelect","video","emit","selectors","inputs","outputs","decls","vars","consts","template","VideoGridComponent_Template","rf","ctx","ɵɵtemplate","VideoGridComponent_div_1_Template"],"sources":["C:\\playground\\malayalm-tube\\src\\app\\components\\video-grid\\video-grid.component.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Video } from '../../models/video';\r\n\r\n@Component({\r\n  selector: 'app-video-grid',\r\n  template: `\r\n    <div class=\"video-grid\">\r\n      <div *ngFor=\"let video of videos\" class=\"video-card\" (click)=\"onVideoClick(video)\">\r\n        <img [src]=\"video.thumbnailUrl\" [alt]=\"video.title\">\r\n        <h3>{{video.title}}</h3>\r\n        <p>Views: {{video.viewCount}}</p>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .video-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n      gap: 1rem;\r\n    }\r\n    .video-card {\r\n      cursor: pointer;\r\n      background: white;\r\n      padding: 0.5rem;\r\n      border-radius: 4px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n    }\r\n    img {\r\n      width: 100%;\r\n      height: auto;\r\n    }\r\n    h3 {\r\n      margin: 0.5rem 0;\r\n      font-size: 1rem;\r\n    }\r\n  `]\r\n})\r\nexport class VideoGridComponent {\r\n  @Input() videos: Video[] = [];\r\n  @Output() videoSelect = new EventEmitter<Video>();\r\n\r\n  onVideoClick(video: Video) {\r\n    this.videoSelect.emit(video);\r\n  }\r\n} "],"mappings":"AAAA,SAAmCA,YAAY,QAAQ,eAAe;;;;;;IAOhEC,EAAA,CAAAC,cAAA,aAAmF;IAA9BD,EAAA,CAAAE,UAAA,mBAAAC,uDAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,QAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,YAAA,CAAAL,QAAA,CAAmB;IAAA,EAAC;IAChFP,EAAA,CAAAa,SAAA,aAAoD;IACpDb,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAc,MAAA,GAAe;IAAAd,EAAA,CAAAe,YAAA,EAAK;IACxBf,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAc,MAAA,GAA0B;IAAAd,EAAA,CAAAe,YAAA,EAAI;;;;IAF5Bf,EAAA,CAAAgB,SAAA,GAA0B;IAA1BhB,EAAA,CAAAiB,UAAA,QAAAV,QAAA,CAAAW,YAAA,EAAAlB,EAAA,CAAAmB,aAAA,CAA0B,QAAAZ,QAAA,CAAAa,KAAA;IAC3BpB,EAAA,CAAAgB,SAAA,GAAe;IAAfhB,EAAA,CAAAqB,iBAAA,CAAAd,QAAA,CAAAa,KAAA,CAAe;IAChBpB,EAAA,CAAAgB,SAAA,GAA0B;IAA1BhB,EAAA,CAAAsB,kBAAA,YAAAf,QAAA,CAAAgB,SAAA,KAA0B;;;AAPrC,MAkCaC,kBAAkB;EAlC/BC,YAAA;IAmCW,KAAAC,MAAM,GAAY,EAAE;IACnB,KAAAC,WAAW,GAAG,IAAI5B,YAAY,EAAS;;EAEjDa,YAAYA,CAACgB,KAAY;IACvB,IAAI,CAACD,WAAW,CAACE,IAAI,CAACD,KAAK,CAAC;EAC9B;;;uBANWJ,kBAAkB;IAAA;EAAA;;;YAAlBA,kBAAkB;MAAAM,SAAA;MAAAC,MAAA;QAAAL,MAAA;MAAA;MAAAM,OAAA;QAAAL,WAAA;MAAA;MAAAM,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UA/B3BtC,EAAA,CAAAC,cAAA,aAAwB;UACtBD,EAAA,CAAAwC,UAAA,IAAAC,iCAAA,iBAIM;UACRzC,EAAA,CAAAe,YAAA,EAAM;;;UALmBf,EAAA,CAAAgB,SAAA,GAAS;UAAThB,EAAA,CAAAiB,UAAA,YAAAsB,GAAA,CAAAb,MAAA,CAAS;;;;;;;;SA8BzBF,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}