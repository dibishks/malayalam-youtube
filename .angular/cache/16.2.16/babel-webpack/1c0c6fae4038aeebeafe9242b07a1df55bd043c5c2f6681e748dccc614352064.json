{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction VideoGridComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function VideoGridComponent_div_2_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const video_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onVideoClick(video_r3));\n    });\n    i0.ɵɵelement(1, \"img\", 5);\n    i0.ɵɵelementStart(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const video_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", video_r3.thumbnailUrl, i0.ɵɵsanitizeUrl)(\"alt\", video_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(video_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Views: \", i0.ɵɵpipeBind1(6, 4, video_r3.viewCount), \"\");\n  }\n}\nfunction VideoGridComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \"Loading more videos...\");\n    i0.ɵɵelementEnd();\n  }\n}\nlet VideoGridComponent = /*#__PURE__*/(() => {\n  class VideoGridComponent {\n    constructor() {\n      this.videos = [];\n      this.isLoading = false;\n      this.videoSelect = new EventEmitter();\n      this.loadMore = new EventEmitter();\n      this.scrollThreshold = 0.8; // Load more when user scrolls 80% down\n    }\n\n    onScroll() {\n      if (this.isLoading) return;\n      const windowHeight = window.innerHeight;\n      const documentHeight = document.documentElement.scrollHeight;\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      const scrolledPercentage = (scrollTop + windowHeight) / documentHeight;\n      if (scrolledPercentage > this.scrollThreshold) {\n        this.loadMore.emit();\n      }\n    }\n    onVideoClick(video) {\n      this.videoSelect.emit(video);\n    }\n    static {\n      this.ɵfac = function VideoGridComponent_Factory(t) {\n        return new (t || VideoGridComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: VideoGridComponent,\n        selectors: [[\"app-video-grid\"]],\n        hostBindings: function VideoGridComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"scroll\", function VideoGridComponent_scroll_HostBindingHandler() {\n              return ctx.onScroll();\n            }, false, i0.ɵɵresolveWindow);\n          }\n        },\n        inputs: {\n          videos: \"videos\",\n          isLoading: \"isLoading\"\n        },\n        outputs: {\n          videoSelect: \"videoSelect\",\n          loadMore: \"loadMore\"\n        },\n        decls: 4,\n        vars: 2,\n        consts: [[1, \"video-grid\"], [\"gridContainer\", \"\"], [\"class\", \"video-card\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"loading\", 4, \"ngIf\"], [1, \"video-card\", 3, \"click\"], [3, \"src\", \"alt\"], [1, \"loading\"]],\n        template: function VideoGridComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0, 1);\n            i0.ɵɵtemplate(2, VideoGridComponent_div_2_Template, 7, 6, \"div\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(3, VideoGridComponent_div_3_Template, 2, 0, \"div\", 3);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.videos);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          }\n        },\n        dependencies: [i1.NgForOf, i1.NgIf, i1.DecimalPipe],\n        styles: [\".video-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fill,minmax(250px,1fr));gap:1rem}.video-card[_ngcontent-%COMP%]{cursor:pointer;background:white;padding:.5rem;border-radius:4px;box-shadow:0 2px 4px #0000001a;transition:transform .2s}.video-card[_ngcontent-%COMP%]:hover{transform:translateY(-2px)}img[_ngcontent-%COMP%]{width:100%;height:auto;border-radius:4px}h3[_ngcontent-%COMP%]{margin:.5rem 0;font-size:1rem;display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden}.loading[_ngcontent-%COMP%]{text-align:center;padding:1rem;font-style:italic}\"]\n      });\n    }\n  }\n  return VideoGridComponent;\n})();\nexport { VideoGridComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}