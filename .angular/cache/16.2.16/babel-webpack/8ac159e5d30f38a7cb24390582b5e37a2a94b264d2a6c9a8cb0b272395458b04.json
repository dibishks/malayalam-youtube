{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nclass SafePipe {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n  }\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n  static {\n    this.ɵfac = function SafePipe_Factory(t) {\n      return new (t || SafePipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n    };\n  }\n  static {\n    this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"safe\",\n      type: SafePipe,\n      pure: true\n    });\n  }\n}\nexport { SafePipe };","map":{"version":3,"names":["SafePipe","constructor","sanitizer","transform","url","bypassSecurityTrustResourceUrl","i0","ɵɵdirectiveInject","i1","DomSanitizer","pure"],"sources":["C:\\playground\\malayalm-tube\\src\\app\\pipes\\safe.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  transform(url: string) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n} "],"mappings":";;AAGA,MAGaA,QAAQ;EACnBC,YAAoBC,SAAuB;IAAvB,KAAAA,SAAS,GAATA,SAAS;EAAiB;EAE9CC,SAASA,CAACC,GAAW;IACnB,OAAO,IAAI,CAACF,SAAS,CAACG,8BAA8B,CAACD,GAAG,CAAC;EAC3D;;;uBALWJ,QAAQ,EAAAM,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;IAAA;EAAA;;;;YAART,QAAQ;MAAAU,IAAA;IAAA;EAAA;;SAARV,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}